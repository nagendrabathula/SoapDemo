buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.soap'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

sourceSets.main.java.srcDirs "src/generated-sources/java"
sourceSets.main.resources.excludes = ['user.xsd']

configurations {
    jaxb
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	compile("wsdl4j:wsdl4j:1.6.2")
    jaxb (
		'com.sun.xml.bind:jaxb-xjc:2.2.7',
		'com.sun.xml.bind:jaxb-impl:2.2.7'
    )
}
task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/generated-sources/java")

    doLast {
        jaxbTargetDir.mkdirs()

        ant.taskdef(
			name: 'xjc',
			classname: 'com.sun.tools.xjc.XJCTask',
			classpath: configurations.jaxb.asPath
        )

        ant.jaxbTargetDir = jaxbTargetDir

        ant.xjc(
			destdir: '${jaxbTargetDir}',
			package: 'com.soap.jaxb',
			schema: 'src/main/resources/xsd/user.xsd'
        )
    }
}

compileJava.dependsOn jaxb
